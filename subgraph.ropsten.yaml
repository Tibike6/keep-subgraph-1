specVersion: 0.0.2
description: Keep Network
repository: https://github.com/miracle2k/keep-subgraph
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: TBTCDepositToken
    network: ropsten
    source:
      startBlock: 8595001
      address: "0x7cAad48DF199Cd661762485fc44126F4Fe8A58C9"
      abi: TBTCDepositToken
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - TBTCDepositToken
      abis:
        - name: TBTCDepositToken
          file: ./abis/TBTCDepositToken.json
      file: ./src/mapping.ts
      eventHandlers:
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleMintTBTCDepositToken


  - kind: ethereum/contract
    name: TBTCToken
    network: ropsten
    source:
      startBlock: 8594999
      address: "0x7c07C42973047223F80C4A69Bb62D5195460Eb5F"
      abi: TBTCTokenContract
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - TBTCToken
      abis:
        - name: TBTCTokenContract
          file: ./abis/TBTCToken.json
      file: ./src/mappingTBTCToken.ts
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleMintTBTCToken

  # Ultimately, this one has "unbonded" value for each operator + the bonded one that belongs to each keep
  # I believe operators directly bond their ETH.
  # On the other hand, STAKING is different and is the KEEP being held.
  - kind: ethereum/contract
    name: KeepBonding
    network: ropsten
    source:
      startBlock: 8593098
      address: "0x60535A59B4e71F908f3fEB0116F450703FB35eD8"
      abi: KeepBondingContract
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - BondCreated
        - BondReassigned
        - BondReleased
        - BondSeized
        - UnbondedValueDeposited
        - UnbondedValueWithdrawn
      abis:
        - name: KeepBondingContract
          file: ./abis/KeepBonding.json
      eventHandlers:
        # When a keep is created, it will create a bond for each operator in the keep.
        # Thus, the event has to be linked to both the keep & the operator address (keep is the "holder")
        - event: BondCreated(indexed address,indexed address,indexed address,uint256,uint256)
          handler: handleBondCreated
        # Seems unused
        - event: BondReassigned(indexed address,indexed uint256,address,uint256)
          handler: handleBondReassigned
        # When the keep closes
        - event: BondReleased(indexed address,indexed uint256)
          handler: handleBondReleased
        # In the case of fraud, deposit -> keep -> seizeSignerBonds()
        - event: BondSeized(indexed address,indexed uint256,address,uint256)
          handler: handleBondSeized
        # Not sure who calls this and with what funds.
        - event: UnbondedValueDeposited(indexed address,indexed address,uint256)
          handler: handleUnbondedValueDeposited
        # Called via keep.withdraw() - not sure?
        - event: UnbondedValueWithdrawn(indexed address,indexed address,uint256)
          handler: handleUnbondedValueWithdrawn
      file: ./src/mappingKeepBonding.ts

  - kind: ethereum/contract
    name: TBTCSystem
    network: ropsten
    source:
      startBlock: 8594981
      address: "0xc3f96306eDabACEa249D2D22Ec65697f38c6Da69"
      abi: TBTCSystem
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - TBTCSystem
      abis:
        - name: TBTCSystem
          file: ./abis/TBTCSystem.json
        # Needs those as well to be able to create a data source from them / instantiate them?
        - name: DepositContract
          file: ./abis/DepositContract.json
        - name: BondedECDSAKeep
          file: ./abis/BondedECDSAKeep.json
      eventHandlers:
        - event: Created(indexed address,indexed address,uint256)
          handler: handleCreatedEvent
        - event: SetupFailed(indexed address,uint256)
          handler: handleSetupFailedEvent
        - event: RegisteredPubkey(indexed address,bytes32,bytes32,uint256)
          handler: handleRegisteredPubkey
        - event: Funded(indexed address,indexed bytes32,uint256)
          handler: handleFundedEvent
        - event: StartedLiquidation(indexed address,bool,uint256)
          handler: handleStartedLiquidationEvent
        - event: CourtesyCalled(indexed address,uint256)
          handler: handleCourtesyCalledEvent
        - event: Liquidated(indexed address,uint256)
          handler: handleLiquidatedEvent
        - event: RedemptionRequested(indexed address,indexed address,indexed bytes32,uint256,bytes,uint256,bytes)
          handler: handleRedemptionRequestedEvent
        - event: GotRedemptionSignature(indexed address,indexed bytes32,bytes32,bytes32,uint256)
          handler: handleGotRedemptionSignatureEvent
        - event: Redeemed(indexed address,indexed bytes32,uint256)
          handler: handleRedeemedEvent

        - event: LotSizesUpdateStarted(uint64[],uint256)
          handler: handleLotSizesUpdateStarted
        - event: LotSizesUpdated(uint64[])
          handler: handleLotSizesUpdated

        - event: SignerFeeDivisorUpdateStarted(uint16,uint256)
          handler: handleSignerFeeDivisorUpdateStarted
        - event: SignerFeeDivisorUpdated(uint16)
          handler: handleSignerFeeDivisorUpdated

        - event: CollateralizationThresholdsUpdateStarted(uint16,uint16,uint16,uint256)
          handler: handleCollateralizationThresholdsUpdateStarted
        - event: CollateralizationThresholdsUpdated(uint16,uint16,uint16)
          handler: handleCollateralizationThresholdsUpdated

        - event: EthBtcPriceFeedAdditionStarted(address,uint256)
          handler: handleEthBtcPriceFeedAdditionStarted
        - event: EthBtcPriceFeedAdded(address)
          handler: handleEthBtcPriceFeedAdded

        - event: KeepFactoriesUpdateStarted(address,address,address,uint256)
          handler: handleKeepFactoriesUpdateStarted
        - event: KeepFactoriesUpdated(address,address,address)
          handler: handleKeepFactoriesUpdated

        - event: AllowNewDepositsUpdated(bool)
          handler: handleAllowNewDepositsUpdated

      file: ./src/mapping.ts

  - kind: ethereum/contract
    name: StakingContract
    network: ropsten
    source:
      startBlock: 8580771
      address: "0x234d2182B29c6a64ce3ab6940037b5C8FdAB608e"
      abi: StakingContract
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - ExpiredLockReleased
        - LockReleased
        - OperatorStaked
        - RecoveredStake
        - StakeDelegated
        - StakeLocked
        - StakeOwnershipTransferred
        - TokensSeized
        - TokensSlashed
        - TopUpCompleted
        - TopUpInitiated
        - Undelegated
      abis:
        - name: StakingContract
          file: ./abis/StakingContract.json
      eventHandlers:
        - event: ExpiredLockReleased(indexed address,address)
          handler: handleExpiredLockReleased
        - event: LockReleased(indexed address,address)
          handler: handleLockReleased
        - event: OperatorStaked(indexed address,indexed address,indexed address,uint256)
          handler: handleOperatorStaked
        - event: RecoveredStake(address)
          handler: handleRecoveredStake
        - event: StakeDelegated(indexed address,indexed address)
          handler: handleStakeDelegated
        - event: StakeLocked(indexed address,address,uint256)
          handler: handleStakeLocked
        - event: StakeOwnershipTransferred(indexed address,indexed address)
          handler: handleStakeOwnershipTransferred
        - event: TokensSeized(indexed address,uint256)
          handler: handleTokensSeized
        - event: TokensSlashed(indexed address,uint256)
          handler: handleTokensSlashed
        - event: TopUpCompleted(indexed address,uint256)
          handler: handleTopUpCompleted
        - event: TopUpInitiated(indexed address,uint256)
          handler: handleTopUpInitiated
        - event: Undelegated(indexed address,uint256)
          handler: handleUndelegated
      file: ./src/mappingTokenStaking.ts


templates:
  - name: DepositContract
    kind: ethereum/contract
    network: ropsten
    source:
      abi: DepositContract
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappingDeposit.ts
      entities:
        - DepositContract
      abis:
        - name: DepositContract
          file: ./abis/DepositContract.json
      callHandlers:
        - function: notifyFundingTimedOut()
          handler: handleNotifyFundingTimedOut
        - function: notifySignerSetupFailed()
          handler: handleNotifySignerSetupFailed
        - function: provideFundingECDdSAFraudProof(uint8, bytes32, bytes32, bytes32, memory)
          handler: handleProvideFundingECDSAFraudProof


  - name: BondedECDSAKeep
    kind: ethereum/contract
    network: ropsten
    source:
      abi: BondedECDSAKeep
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappingBondedECDSAKeep.ts
      entities:
        - BondedECDSAKeep
      abis:
        - name: BondedECDSAKeep
          file: ./abis/BondedECDSAKeep.json
      eventHandlers:
        # KeepContract.submitPublicKey() x3 => emits PublicKeyPublished
        - event: PublicKeyPublished(bytes)
          handler: handlePublicKeyPublished
        - event: KeepClosed()
          handler: handleKeepClosed
        - event: KeepTerminated()
          handler: handleKeepTerminated
