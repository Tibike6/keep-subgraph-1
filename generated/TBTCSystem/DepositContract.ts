// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class DepositContract extends ethereum.SmartContract {
  static bind(address: Address): DepositContract {
    return new DepositContract("DepositContract", address);
  }

  auctionValue(): BigInt {
    let result = super.call("auctionValue", "auctionValue():(uint256)", []);

    return result[0].toBigInt();
  }

  try_auctionValue(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("auctionValue", "auctionValue():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  exitCourtesyCall(): boolean {
    let result = super.call(
      "exitCourtesyCall",
      "exitCourtesyCall():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_exitCourtesyCall(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "exitCourtesyCall",
      "exitCourtesyCall():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getCollateralizationPercentage(): BigInt {
    let result = super.call(
      "getCollateralizationPercentage",
      "getCollateralizationPercentage():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getCollateralizationPercentage(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getCollateralizationPercentage",
      "getCollateralizationPercentage():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getCurrentState(): BigInt {
    let result = super.call(
      "getCurrentState",
      "getCurrentState():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getCurrentState(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getCurrentState",
      "getCurrentState():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getInitialCollateralizedPercent(): i32 {
    let result = super.call(
      "getInitialCollateralizedPercent",
      "getInitialCollateralizedPercent():(uint16)",
      []
    );

    return result[0].toI32();
  }

  try_getInitialCollateralizedPercent(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "getInitialCollateralizedPercent",
      "getInitialCollateralizedPercent():(uint16)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  getKeepAddress(): Address {
    let result = super.call("getKeepAddress", "getKeepAddress():(address)", []);

    return result[0].toAddress();
  }

  try_getKeepAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getKeepAddress",
      "getKeepAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getOwnerRedemptionTbtcRequirement(_redeemer: Address): BigInt {
    let result = super.call(
      "getOwnerRedemptionTbtcRequirement",
      "getOwnerRedemptionTbtcRequirement(address):(uint256)",
      [ethereum.Value.fromAddress(_redeemer)]
    );

    return result[0].toBigInt();
  }

  try_getOwnerRedemptionTbtcRequirement(
    _redeemer: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getOwnerRedemptionTbtcRequirement",
      "getOwnerRedemptionTbtcRequirement(address):(uint256)",
      [ethereum.Value.fromAddress(_redeemer)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRedemptionTbtcRequirement(_redeemer: Address): BigInt {
    let result = super.call(
      "getRedemptionTbtcRequirement",
      "getRedemptionTbtcRequirement(address):(uint256)",
      [ethereum.Value.fromAddress(_redeemer)]
    );

    return result[0].toBigInt();
  }

  try_getRedemptionTbtcRequirement(
    _redeemer: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRedemptionTbtcRequirement",
      "getRedemptionTbtcRequirement(address):(uint256)",
      [ethereum.Value.fromAddress(_redeemer)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getSeverelyUndercollateralizedThresholdPercent(): i32 {
    let result = super.call(
      "getSeverelyUndercollateralizedThresholdPercent",
      "getSeverelyUndercollateralizedThresholdPercent():(uint16)",
      []
    );

    return result[0].toI32();
  }

  try_getSeverelyUndercollateralizedThresholdPercent(): ethereum.CallResult<
    i32
  > {
    let result = super.tryCall(
      "getSeverelyUndercollateralizedThresholdPercent",
      "getSeverelyUndercollateralizedThresholdPercent():(uint16)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  getUndercollateralizedThresholdPercent(): i32 {
    let result = super.call(
      "getUndercollateralizedThresholdPercent",
      "getUndercollateralizedThresholdPercent():(uint16)",
      []
    );

    return result[0].toI32();
  }

  try_getUndercollateralizedThresholdPercent(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "getUndercollateralizedThresholdPercent",
      "getUndercollateralizedThresholdPercent():(uint16)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  getWithdrawAllowance(): BigInt {
    let result = super.call(
      "getWithdrawAllowance",
      "getWithdrawAllowance():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getWithdrawAllowance(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getWithdrawAllowance",
      "getWithdrawAllowance():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  inActive(): boolean {
    let result = super.call("inActive", "inActive():(bool)", []);

    return result[0].toBoolean();
  }

  try_inActive(): ethereum.CallResult<boolean> {
    let result = super.tryCall("inActive", "inActive():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  increaseRedemptionFee(
    _previousOutputValueBytes: Bytes,
    _newOutputValueBytes: Bytes
  ): boolean {
    let result = super.call(
      "increaseRedemptionFee",
      "increaseRedemptionFee(bytes8,bytes8):(bool)",
      [
        ethereum.Value.fromFixedBytes(_previousOutputValueBytes),
        ethereum.Value.fromFixedBytes(_newOutputValueBytes)
      ]
    );

    return result[0].toBoolean();
  }

  try_increaseRedemptionFee(
    _previousOutputValueBytes: Bytes,
    _newOutputValueBytes: Bytes
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "increaseRedemptionFee",
      "increaseRedemptionFee(bytes8,bytes8):(bool)",
      [
        ethereum.Value.fromFixedBytes(_previousOutputValueBytes),
        ethereum.Value.fromFixedBytes(_newOutputValueBytes)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  lotSizeSatoshis(): BigInt {
    let result = super.call(
      "lotSizeSatoshis",
      "lotSizeSatoshis():(uint64)",
      []
    );

    return result[0].toBigInt();
  }

  try_lotSizeSatoshis(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "lotSizeSatoshis",
      "lotSizeSatoshis():(uint64)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  lotSizeTbtc(): BigInt {
    let result = super.call("lotSizeTbtc", "lotSizeTbtc():(uint256)", []);

    return result[0].toBigInt();
  }

  try_lotSizeTbtc(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("lotSizeTbtc", "lotSizeTbtc():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  notifyCourtesyCall(): boolean {
    let result = super.call(
      "notifyCourtesyCall",
      "notifyCourtesyCall():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_notifyCourtesyCall(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "notifyCourtesyCall",
      "notifyCourtesyCall():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  notifyCourtesyTimeout(): boolean {
    let result = super.call(
      "notifyCourtesyTimeout",
      "notifyCourtesyTimeout():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_notifyCourtesyTimeout(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "notifyCourtesyTimeout",
      "notifyCourtesyTimeout():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  notifyFundingTimeout(): boolean {
    let result = super.call(
      "notifyFundingTimeout",
      "notifyFundingTimeout():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_notifyFundingTimeout(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "notifyFundingTimeout",
      "notifyFundingTimeout():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  notifyRedemptionProofTimeout(): boolean {
    let result = super.call(
      "notifyRedemptionProofTimeout",
      "notifyRedemptionProofTimeout():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_notifyRedemptionProofTimeout(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "notifyRedemptionProofTimeout",
      "notifyRedemptionProofTimeout():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  notifySignatureTimeout(): boolean {
    let result = super.call(
      "notifySignatureTimeout",
      "notifySignatureTimeout():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_notifySignatureTimeout(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "notifySignatureTimeout",
      "notifySignatureTimeout():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  notifySignerSetupFailure(): boolean {
    let result = super.call(
      "notifySignerSetupFailure",
      "notifySignerSetupFailure():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_notifySignerSetupFailure(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "notifySignerSetupFailure",
      "notifySignerSetupFailure():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  notifyUndercollateralizedLiquidation(): boolean {
    let result = super.call(
      "notifyUndercollateralizedLiquidation",
      "notifyUndercollateralizedLiquidation():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_notifyUndercollateralizedLiquidation(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "notifyUndercollateralizedLiquidation",
      "notifyUndercollateralizedLiquidation():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  provideBTCFundingProof(
    _txVersion: Bytes,
    _txInputVector: Bytes,
    _txOutputVector: Bytes,
    _txLocktime: Bytes,
    _fundingOutputIndex: i32,
    _merkleProof: Bytes,
    _txIndexInBlock: BigInt,
    _bitcoinHeaders: Bytes
  ): boolean {
    let result = super.call(
      "provideBTCFundingProof",
      "provideBTCFundingProof(bytes4,bytes,bytes,bytes4,uint8,bytes,uint256,bytes):(bool)",
      [
        ethereum.Value.fromFixedBytes(_txVersion),
        ethereum.Value.fromBytes(_txInputVector),
        ethereum.Value.fromBytes(_txOutputVector),
        ethereum.Value.fromFixedBytes(_txLocktime),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_fundingOutputIndex)),
        ethereum.Value.fromBytes(_merkleProof),
        ethereum.Value.fromUnsignedBigInt(_txIndexInBlock),
        ethereum.Value.fromBytes(_bitcoinHeaders)
      ]
    );

    return result[0].toBoolean();
  }

  try_provideBTCFundingProof(
    _txVersion: Bytes,
    _txInputVector: Bytes,
    _txOutputVector: Bytes,
    _txLocktime: Bytes,
    _fundingOutputIndex: i32,
    _merkleProof: Bytes,
    _txIndexInBlock: BigInt,
    _bitcoinHeaders: Bytes
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "provideBTCFundingProof",
      "provideBTCFundingProof(bytes4,bytes,bytes,bytes4,uint8,bytes,uint256,bytes):(bool)",
      [
        ethereum.Value.fromFixedBytes(_txVersion),
        ethereum.Value.fromBytes(_txInputVector),
        ethereum.Value.fromBytes(_txOutputVector),
        ethereum.Value.fromFixedBytes(_txLocktime),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_fundingOutputIndex)),
        ethereum.Value.fromBytes(_merkleProof),
        ethereum.Value.fromUnsignedBigInt(_txIndexInBlock),
        ethereum.Value.fromBytes(_bitcoinHeaders)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  provideECDSAFraudProof(
    _v: i32,
    _r: Bytes,
    _s: Bytes,
    _signedDigest: Bytes,
    _preimage: Bytes
  ): boolean {
    let result = super.call(
      "provideECDSAFraudProof",
      "provideECDSAFraudProof(uint8,bytes32,bytes32,bytes32,bytes):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_v)),
        ethereum.Value.fromFixedBytes(_r),
        ethereum.Value.fromFixedBytes(_s),
        ethereum.Value.fromFixedBytes(_signedDigest),
        ethereum.Value.fromBytes(_preimage)
      ]
    );

    return result[0].toBoolean();
  }

  try_provideECDSAFraudProof(
    _v: i32,
    _r: Bytes,
    _s: Bytes,
    _signedDigest: Bytes,
    _preimage: Bytes
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "provideECDSAFraudProof",
      "provideECDSAFraudProof(uint8,bytes32,bytes32,bytes32,bytes):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_v)),
        ethereum.Value.fromFixedBytes(_r),
        ethereum.Value.fromFixedBytes(_s),
        ethereum.Value.fromFixedBytes(_signedDigest),
        ethereum.Value.fromBytes(_preimage)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  provideFundingECDSAFraudProof(
    _v: i32,
    _r: Bytes,
    _s: Bytes,
    _signedDigest: Bytes,
    _preimage: Bytes
  ): boolean {
    let result = super.call(
      "provideFundingECDSAFraudProof",
      "provideFundingECDSAFraudProof(uint8,bytes32,bytes32,bytes32,bytes):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_v)),
        ethereum.Value.fromFixedBytes(_r),
        ethereum.Value.fromFixedBytes(_s),
        ethereum.Value.fromFixedBytes(_signedDigest),
        ethereum.Value.fromBytes(_preimage)
      ]
    );

    return result[0].toBoolean();
  }

  try_provideFundingECDSAFraudProof(
    _v: i32,
    _r: Bytes,
    _s: Bytes,
    _signedDigest: Bytes,
    _preimage: Bytes
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "provideFundingECDSAFraudProof",
      "provideFundingECDSAFraudProof(uint8,bytes32,bytes32,bytes32,bytes):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_v)),
        ethereum.Value.fromFixedBytes(_r),
        ethereum.Value.fromFixedBytes(_s),
        ethereum.Value.fromFixedBytes(_signedDigest),
        ethereum.Value.fromBytes(_preimage)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  provideRedemptionProof(
    _txVersion: Bytes,
    _txInputVector: Bytes,
    _txOutputVector: Bytes,
    _txLocktime: Bytes,
    _merkleProof: Bytes,
    _txIndexInBlock: BigInt,
    _bitcoinHeaders: Bytes
  ): boolean {
    let result = super.call(
      "provideRedemptionProof",
      "provideRedemptionProof(bytes4,bytes,bytes,bytes4,bytes,uint256,bytes):(bool)",
      [
        ethereum.Value.fromFixedBytes(_txVersion),
        ethereum.Value.fromBytes(_txInputVector),
        ethereum.Value.fromBytes(_txOutputVector),
        ethereum.Value.fromFixedBytes(_txLocktime),
        ethereum.Value.fromBytes(_merkleProof),
        ethereum.Value.fromUnsignedBigInt(_txIndexInBlock),
        ethereum.Value.fromBytes(_bitcoinHeaders)
      ]
    );

    return result[0].toBoolean();
  }

  try_provideRedemptionProof(
    _txVersion: Bytes,
    _txInputVector: Bytes,
    _txOutputVector: Bytes,
    _txLocktime: Bytes,
    _merkleProof: Bytes,
    _txIndexInBlock: BigInt,
    _bitcoinHeaders: Bytes
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "provideRedemptionProof",
      "provideRedemptionProof(bytes4,bytes,bytes,bytes4,bytes,uint256,bytes):(bool)",
      [
        ethereum.Value.fromFixedBytes(_txVersion),
        ethereum.Value.fromBytes(_txInputVector),
        ethereum.Value.fromBytes(_txOutputVector),
        ethereum.Value.fromFixedBytes(_txLocktime),
        ethereum.Value.fromBytes(_merkleProof),
        ethereum.Value.fromUnsignedBigInt(_txIndexInBlock),
        ethereum.Value.fromBytes(_bitcoinHeaders)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  provideRedemptionSignature(_v: i32, _r: Bytes, _s: Bytes): boolean {
    let result = super.call(
      "provideRedemptionSignature",
      "provideRedemptionSignature(uint8,bytes32,bytes32):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_v)),
        ethereum.Value.fromFixedBytes(_r),
        ethereum.Value.fromFixedBytes(_s)
      ]
    );

    return result[0].toBoolean();
  }

  try_provideRedemptionSignature(
    _v: i32,
    _r: Bytes,
    _s: Bytes
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "provideRedemptionSignature",
      "provideRedemptionSignature(uint8,bytes32,bytes32):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_v)),
        ethereum.Value.fromFixedBytes(_r),
        ethereum.Value.fromFixedBytes(_s)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  purchaseSignerBondsAtAuction(): boolean {
    let result = super.call(
      "purchaseSignerBondsAtAuction",
      "purchaseSignerBondsAtAuction():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_purchaseSignerBondsAtAuction(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "purchaseSignerBondsAtAuction",
      "purchaseSignerBondsAtAuction():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  remainingTerm(): BigInt {
    let result = super.call("remainingTerm", "remainingTerm():(uint256)", []);

    return result[0].toBigInt();
  }

  try_remainingTerm(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "remainingTerm",
      "remainingTerm():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  requestRedemption(
    _outputValueBytes: Bytes,
    _redeemerOutputScript: Bytes
  ): boolean {
    let result = super.call(
      "requestRedemption",
      "requestRedemption(bytes8,bytes):(bool)",
      [
        ethereum.Value.fromFixedBytes(_outputValueBytes),
        ethereum.Value.fromBytes(_redeemerOutputScript)
      ]
    );

    return result[0].toBoolean();
  }

  try_requestRedemption(
    _outputValueBytes: Bytes,
    _redeemerOutputScript: Bytes
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "requestRedemption",
      "requestRedemption(bytes8,bytes):(bool)",
      [
        ethereum.Value.fromFixedBytes(_outputValueBytes),
        ethereum.Value.fromBytes(_redeemerOutputScript)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  retrieveSignerPubkey(): boolean {
    let result = super.call(
      "retrieveSignerPubkey",
      "retrieveSignerPubkey():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_retrieveSignerPubkey(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "retrieveSignerPubkey",
      "retrieveSignerPubkey():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  signerFee(): BigInt {
    let result = super.call("signerFee", "signerFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_signerFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("signerFee", "signerFee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  transferAndRequestRedemption(
    _outputValueBytes: Bytes,
    _redeemerOutputScript: Bytes,
    _finalRecipient: Address
  ): boolean {
    let result = super.call(
      "transferAndRequestRedemption",
      "transferAndRequestRedemption(bytes8,bytes,address):(bool)",
      [
        ethereum.Value.fromFixedBytes(_outputValueBytes),
        ethereum.Value.fromBytes(_redeemerOutputScript),
        ethereum.Value.fromAddress(_finalRecipient)
      ]
    );

    return result[0].toBoolean();
  }

  try_transferAndRequestRedemption(
    _outputValueBytes: Bytes,
    _redeemerOutputScript: Bytes,
    _finalRecipient: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "transferAndRequestRedemption",
      "transferAndRequestRedemption(bytes8,bytes,address):(bool)",
      [
        ethereum.Value.fromFixedBytes(_outputValueBytes),
        ethereum.Value.fromBytes(_redeemerOutputScript),
        ethereum.Value.fromAddress(_finalRecipient)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  utxoSize(): BigInt {
    let result = super.call("utxoSize", "utxoSize():(uint256)", []);

    return result[0].toBigInt();
  }

  try_utxoSize(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("utxoSize", "utxoSize():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  withdrawFunds(): boolean {
    let result = super.call("withdrawFunds", "withdrawFunds():(bool)", []);

    return result[0].toBoolean();
  }

  try_withdrawFunds(): ethereum.CallResult<boolean> {
    let result = super.tryCall("withdrawFunds", "withdrawFunds():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DefaultCall extends ethereum.Call {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class CreateNewDepositCall extends ethereum.Call {
  get inputs(): CreateNewDepositCall__Inputs {
    return new CreateNewDepositCall__Inputs(this);
  }

  get outputs(): CreateNewDepositCall__Outputs {
    return new CreateNewDepositCall__Outputs(this);
  }
}

export class CreateNewDepositCall__Inputs {
  _call: CreateNewDepositCall;

  constructor(call: CreateNewDepositCall) {
    this._call = call;
  }

  get _tbtcSystem(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tbtcToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _tbtcDepositToken(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _feeRebateToken(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _vendingMachineAddress(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _m(): i32 {
    return this._call.inputValues[5].value.toI32();
  }

  get _n(): i32 {
    return this._call.inputValues[6].value.toI32();
  }

  get _lotSizeSatoshis(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }
}

export class CreateNewDepositCall__Outputs {
  _call: CreateNewDepositCall;

  constructor(call: CreateNewDepositCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class ExitCourtesyCallCall extends ethereum.Call {
  get inputs(): ExitCourtesyCallCall__Inputs {
    return new ExitCourtesyCallCall__Inputs(this);
  }

  get outputs(): ExitCourtesyCallCall__Outputs {
    return new ExitCourtesyCallCall__Outputs(this);
  }
}

export class ExitCourtesyCallCall__Inputs {
  _call: ExitCourtesyCallCall;

  constructor(call: ExitCourtesyCallCall) {
    this._call = call;
  }
}

export class ExitCourtesyCallCall__Outputs {
  _call: ExitCourtesyCallCall;

  constructor(call: ExitCourtesyCallCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class IncreaseRedemptionFeeCall extends ethereum.Call {
  get inputs(): IncreaseRedemptionFeeCall__Inputs {
    return new IncreaseRedemptionFeeCall__Inputs(this);
  }

  get outputs(): IncreaseRedemptionFeeCall__Outputs {
    return new IncreaseRedemptionFeeCall__Outputs(this);
  }
}

export class IncreaseRedemptionFeeCall__Inputs {
  _call: IncreaseRedemptionFeeCall;

  constructor(call: IncreaseRedemptionFeeCall) {
    this._call = call;
  }

  get _previousOutputValueBytes(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _newOutputValueBytes(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class IncreaseRedemptionFeeCall__Outputs {
  _call: IncreaseRedemptionFeeCall;

  constructor(call: IncreaseRedemptionFeeCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _factory(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class NotifyCourtesyCallCall extends ethereum.Call {
  get inputs(): NotifyCourtesyCallCall__Inputs {
    return new NotifyCourtesyCallCall__Inputs(this);
  }

  get outputs(): NotifyCourtesyCallCall__Outputs {
    return new NotifyCourtesyCallCall__Outputs(this);
  }
}

export class NotifyCourtesyCallCall__Inputs {
  _call: NotifyCourtesyCallCall;

  constructor(call: NotifyCourtesyCallCall) {
    this._call = call;
  }
}

export class NotifyCourtesyCallCall__Outputs {
  _call: NotifyCourtesyCallCall;

  constructor(call: NotifyCourtesyCallCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class NotifyCourtesyTimeoutCall extends ethereum.Call {
  get inputs(): NotifyCourtesyTimeoutCall__Inputs {
    return new NotifyCourtesyTimeoutCall__Inputs(this);
  }

  get outputs(): NotifyCourtesyTimeoutCall__Outputs {
    return new NotifyCourtesyTimeoutCall__Outputs(this);
  }
}

export class NotifyCourtesyTimeoutCall__Inputs {
  _call: NotifyCourtesyTimeoutCall;

  constructor(call: NotifyCourtesyTimeoutCall) {
    this._call = call;
  }
}

export class NotifyCourtesyTimeoutCall__Outputs {
  _call: NotifyCourtesyTimeoutCall;

  constructor(call: NotifyCourtesyTimeoutCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class NotifyFundingTimeoutCall extends ethereum.Call {
  get inputs(): NotifyFundingTimeoutCall__Inputs {
    return new NotifyFundingTimeoutCall__Inputs(this);
  }

  get outputs(): NotifyFundingTimeoutCall__Outputs {
    return new NotifyFundingTimeoutCall__Outputs(this);
  }
}

export class NotifyFundingTimeoutCall__Inputs {
  _call: NotifyFundingTimeoutCall;

  constructor(call: NotifyFundingTimeoutCall) {
    this._call = call;
  }
}

export class NotifyFundingTimeoutCall__Outputs {
  _call: NotifyFundingTimeoutCall;

  constructor(call: NotifyFundingTimeoutCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class NotifyRedemptionProofTimeoutCall extends ethereum.Call {
  get inputs(): NotifyRedemptionProofTimeoutCall__Inputs {
    return new NotifyRedemptionProofTimeoutCall__Inputs(this);
  }

  get outputs(): NotifyRedemptionProofTimeoutCall__Outputs {
    return new NotifyRedemptionProofTimeoutCall__Outputs(this);
  }
}

export class NotifyRedemptionProofTimeoutCall__Inputs {
  _call: NotifyRedemptionProofTimeoutCall;

  constructor(call: NotifyRedemptionProofTimeoutCall) {
    this._call = call;
  }
}

export class NotifyRedemptionProofTimeoutCall__Outputs {
  _call: NotifyRedemptionProofTimeoutCall;

  constructor(call: NotifyRedemptionProofTimeoutCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class NotifySignatureTimeoutCall extends ethereum.Call {
  get inputs(): NotifySignatureTimeoutCall__Inputs {
    return new NotifySignatureTimeoutCall__Inputs(this);
  }

  get outputs(): NotifySignatureTimeoutCall__Outputs {
    return new NotifySignatureTimeoutCall__Outputs(this);
  }
}

export class NotifySignatureTimeoutCall__Inputs {
  _call: NotifySignatureTimeoutCall;

  constructor(call: NotifySignatureTimeoutCall) {
    this._call = call;
  }
}

export class NotifySignatureTimeoutCall__Outputs {
  _call: NotifySignatureTimeoutCall;

  constructor(call: NotifySignatureTimeoutCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class NotifySignerSetupFailureCall extends ethereum.Call {
  get inputs(): NotifySignerSetupFailureCall__Inputs {
    return new NotifySignerSetupFailureCall__Inputs(this);
  }

  get outputs(): NotifySignerSetupFailureCall__Outputs {
    return new NotifySignerSetupFailureCall__Outputs(this);
  }
}

export class NotifySignerSetupFailureCall__Inputs {
  _call: NotifySignerSetupFailureCall;

  constructor(call: NotifySignerSetupFailureCall) {
    this._call = call;
  }
}

export class NotifySignerSetupFailureCall__Outputs {
  _call: NotifySignerSetupFailureCall;

  constructor(call: NotifySignerSetupFailureCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class NotifyUndercollateralizedLiquidationCall extends ethereum.Call {
  get inputs(): NotifyUndercollateralizedLiquidationCall__Inputs {
    return new NotifyUndercollateralizedLiquidationCall__Inputs(this);
  }

  get outputs(): NotifyUndercollateralizedLiquidationCall__Outputs {
    return new NotifyUndercollateralizedLiquidationCall__Outputs(this);
  }
}

export class NotifyUndercollateralizedLiquidationCall__Inputs {
  _call: NotifyUndercollateralizedLiquidationCall;

  constructor(call: NotifyUndercollateralizedLiquidationCall) {
    this._call = call;
  }
}

export class NotifyUndercollateralizedLiquidationCall__Outputs {
  _call: NotifyUndercollateralizedLiquidationCall;

  constructor(call: NotifyUndercollateralizedLiquidationCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class ProvideBTCFundingProofCall extends ethereum.Call {
  get inputs(): ProvideBTCFundingProofCall__Inputs {
    return new ProvideBTCFundingProofCall__Inputs(this);
  }

  get outputs(): ProvideBTCFundingProofCall__Outputs {
    return new ProvideBTCFundingProofCall__Outputs(this);
  }
}

export class ProvideBTCFundingProofCall__Inputs {
  _call: ProvideBTCFundingProofCall;

  constructor(call: ProvideBTCFundingProofCall) {
    this._call = call;
  }

  get _txVersion(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _txInputVector(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _txOutputVector(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get _txLocktime(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get _fundingOutputIndex(): i32 {
    return this._call.inputValues[4].value.toI32();
  }

  get _merkleProof(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }

  get _txIndexInBlock(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get _bitcoinHeaders(): Bytes {
    return this._call.inputValues[7].value.toBytes();
  }
}

export class ProvideBTCFundingProofCall__Outputs {
  _call: ProvideBTCFundingProofCall;

  constructor(call: ProvideBTCFundingProofCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class ProvideECDSAFraudProofCall extends ethereum.Call {
  get inputs(): ProvideECDSAFraudProofCall__Inputs {
    return new ProvideECDSAFraudProofCall__Inputs(this);
  }

  get outputs(): ProvideECDSAFraudProofCall__Outputs {
    return new ProvideECDSAFraudProofCall__Outputs(this);
  }
}

export class ProvideECDSAFraudProofCall__Inputs {
  _call: ProvideECDSAFraudProofCall;

  constructor(call: ProvideECDSAFraudProofCall) {
    this._call = call;
  }

  get _v(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get _r(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _s(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get _signedDigest(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get _preimage(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class ProvideECDSAFraudProofCall__Outputs {
  _call: ProvideECDSAFraudProofCall;

  constructor(call: ProvideECDSAFraudProofCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class ProvideFundingECDSAFraudProofCall extends ethereum.Call {
  get inputs(): ProvideFundingECDSAFraudProofCall__Inputs {
    return new ProvideFundingECDSAFraudProofCall__Inputs(this);
  }

  get outputs(): ProvideFundingECDSAFraudProofCall__Outputs {
    return new ProvideFundingECDSAFraudProofCall__Outputs(this);
  }
}

export class ProvideFundingECDSAFraudProofCall__Inputs {
  _call: ProvideFundingECDSAFraudProofCall;

  constructor(call: ProvideFundingECDSAFraudProofCall) {
    this._call = call;
  }

  get _v(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get _r(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _s(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get _signedDigest(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get _preimage(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class ProvideFundingECDSAFraudProofCall__Outputs {
  _call: ProvideFundingECDSAFraudProofCall;

  constructor(call: ProvideFundingECDSAFraudProofCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class ProvideRedemptionProofCall extends ethereum.Call {
  get inputs(): ProvideRedemptionProofCall__Inputs {
    return new ProvideRedemptionProofCall__Inputs(this);
  }

  get outputs(): ProvideRedemptionProofCall__Outputs {
    return new ProvideRedemptionProofCall__Outputs(this);
  }
}

export class ProvideRedemptionProofCall__Inputs {
  _call: ProvideRedemptionProofCall;

  constructor(call: ProvideRedemptionProofCall) {
    this._call = call;
  }

  get _txVersion(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _txInputVector(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _txOutputVector(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get _txLocktime(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get _merkleProof(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }

  get _txIndexInBlock(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _bitcoinHeaders(): Bytes {
    return this._call.inputValues[6].value.toBytes();
  }
}

export class ProvideRedemptionProofCall__Outputs {
  _call: ProvideRedemptionProofCall;

  constructor(call: ProvideRedemptionProofCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class ProvideRedemptionSignatureCall extends ethereum.Call {
  get inputs(): ProvideRedemptionSignatureCall__Inputs {
    return new ProvideRedemptionSignatureCall__Inputs(this);
  }

  get outputs(): ProvideRedemptionSignatureCall__Outputs {
    return new ProvideRedemptionSignatureCall__Outputs(this);
  }
}

export class ProvideRedemptionSignatureCall__Inputs {
  _call: ProvideRedemptionSignatureCall;

  constructor(call: ProvideRedemptionSignatureCall) {
    this._call = call;
  }

  get _v(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get _r(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _s(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class ProvideRedemptionSignatureCall__Outputs {
  _call: ProvideRedemptionSignatureCall;

  constructor(call: ProvideRedemptionSignatureCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class PurchaseSignerBondsAtAuctionCall extends ethereum.Call {
  get inputs(): PurchaseSignerBondsAtAuctionCall__Inputs {
    return new PurchaseSignerBondsAtAuctionCall__Inputs(this);
  }

  get outputs(): PurchaseSignerBondsAtAuctionCall__Outputs {
    return new PurchaseSignerBondsAtAuctionCall__Outputs(this);
  }
}

export class PurchaseSignerBondsAtAuctionCall__Inputs {
  _call: PurchaseSignerBondsAtAuctionCall;

  constructor(call: PurchaseSignerBondsAtAuctionCall) {
    this._call = call;
  }
}

export class PurchaseSignerBondsAtAuctionCall__Outputs {
  _call: PurchaseSignerBondsAtAuctionCall;

  constructor(call: PurchaseSignerBondsAtAuctionCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class RequestFunderAbortCall extends ethereum.Call {
  get inputs(): RequestFunderAbortCall__Inputs {
    return new RequestFunderAbortCall__Inputs(this);
  }

  get outputs(): RequestFunderAbortCall__Outputs {
    return new RequestFunderAbortCall__Outputs(this);
  }
}

export class RequestFunderAbortCall__Inputs {
  _call: RequestFunderAbortCall;

  constructor(call: RequestFunderAbortCall) {
    this._call = call;
  }

  get _abortOutputScript(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class RequestFunderAbortCall__Outputs {
  _call: RequestFunderAbortCall;

  constructor(call: RequestFunderAbortCall) {
    this._call = call;
  }
}

export class RequestRedemptionCall extends ethereum.Call {
  get inputs(): RequestRedemptionCall__Inputs {
    return new RequestRedemptionCall__Inputs(this);
  }

  get outputs(): RequestRedemptionCall__Outputs {
    return new RequestRedemptionCall__Outputs(this);
  }
}

export class RequestRedemptionCall__Inputs {
  _call: RequestRedemptionCall;

  constructor(call: RequestRedemptionCall) {
    this._call = call;
  }

  get _outputValueBytes(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _redeemerOutputScript(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class RequestRedemptionCall__Outputs {
  _call: RequestRedemptionCall;

  constructor(call: RequestRedemptionCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class RetrieveSignerPubkeyCall extends ethereum.Call {
  get inputs(): RetrieveSignerPubkeyCall__Inputs {
    return new RetrieveSignerPubkeyCall__Inputs(this);
  }

  get outputs(): RetrieveSignerPubkeyCall__Outputs {
    return new RetrieveSignerPubkeyCall__Outputs(this);
  }
}

export class RetrieveSignerPubkeyCall__Inputs {
  _call: RetrieveSignerPubkeyCall;

  constructor(call: RetrieveSignerPubkeyCall) {
    this._call = call;
  }
}

export class RetrieveSignerPubkeyCall__Outputs {
  _call: RetrieveSignerPubkeyCall;

  constructor(call: RetrieveSignerPubkeyCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class TransferAndRequestRedemptionCall extends ethereum.Call {
  get inputs(): TransferAndRequestRedemptionCall__Inputs {
    return new TransferAndRequestRedemptionCall__Inputs(this);
  }

  get outputs(): TransferAndRequestRedemptionCall__Outputs {
    return new TransferAndRequestRedemptionCall__Outputs(this);
  }
}

export class TransferAndRequestRedemptionCall__Inputs {
  _call: TransferAndRequestRedemptionCall;

  constructor(call: TransferAndRequestRedemptionCall) {
    this._call = call;
  }

  get _outputValueBytes(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _redeemerOutputScript(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _finalRecipient(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class TransferAndRequestRedemptionCall__Outputs {
  _call: TransferAndRequestRedemptionCall;

  constructor(call: TransferAndRequestRedemptionCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class WithdrawFundsCall extends ethereum.Call {
  get inputs(): WithdrawFundsCall__Inputs {
    return new WithdrawFundsCall__Inputs(this);
  }

  get outputs(): WithdrawFundsCall__Outputs {
    return new WithdrawFundsCall__Outputs(this);
  }
}

export class WithdrawFundsCall__Inputs {
  _call: WithdrawFundsCall;

  constructor(call: WithdrawFundsCall) {
    this._call = call;
  }
}

export class WithdrawFundsCall__Outputs {
  _call: WithdrawFundsCall;

  constructor(call: WithdrawFundsCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}
